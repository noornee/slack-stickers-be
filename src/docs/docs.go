// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Slack Stickers",
            "email": "slackstickers@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Takes the user email and password and returns user and token details",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "This uploads stickers into the database. Keep in mind that it checks to ensure that it dfors",
                "parameters": [
                    {
                        "description": "Upload Request",
                        "name": "uploadRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/media.uploadRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.GenericResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/media.uploadRequest"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.GenericResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/model.GenericResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.GenericResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/model.GenericResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.GenericResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/model.GenericResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "media.uploadRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GenericResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "The http response code\n\nRequired: true\nExample: 200",
                    "type": "integer"
                },
                "data": {
                    "description": "The http response data in cases where the request was processed successfully (optional)\n\nExample: {\"id\": \"uuid\", \"name\": \"john doe\"}"
                },
                "error": {
                    "description": "The error message (optional)\n\nExample: cannot process this request at this time (optional)",
                    "type": "string"
                },
                "message": {
                    "description": "The success message (optional)\n\nExample: User has been created successfully (optional)",
                    "type": "string"
                },
                "page": {
                    "description": "Page is the pagination info"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:2008",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Slack Stickers API documentation",
	Description:      "This documents all rest endpoints exposed by this application. Please support us @ buymeacoffee.com/slackstickers",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
